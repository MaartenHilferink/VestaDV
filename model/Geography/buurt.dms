//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//       In deze configuratiefile wordt de regio indeling buurt met eigendommen etc.    //
//       geconfigureerd                                                                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

unit<uint32> Buurt:
	StorageName     = "%SourceDataProjDir%/hulpbestanden/buurt/20200114_CBS_buurt_2020.dbf",
	DialogData      = "geometry",
	DialogType      = "Map",
	StorageReadOnly = "True",
	url             = "%sourceDataProjDir%/hulpbestanden/buurt/20200114_update_buurtkaart_FvdM.txt"
{
	attribute<rdc_meter> geometry (poly)
	:	label           = "De CBS buurtkaart 2020"
	,	StorageName     = "%SourceDataProjDir%/hulpbestanden/buurt/20200114_CBS_buurt_2020.shp"
	,	StorageReadOnly = "True";
	attribute<string>    BU_CODE;
	attribute<uint32>    code          := uint32(substr(BU_CODE,2,8));

	// bepalen centroide en oppervlakte o.b.v. buurtpolygoon
	attribute<rdc_meter> point         := centroid_or_mid(geometry);
	attribute<m2>        area          := area(geometry, m2);
	attribute<km2>       AreaInKm2     := area / value(1000000, m2 / km2);
	attribute<ha>        AreaInHa      := area / value(10000, m2 / ha);

	// ruimtelijke niveau's nationaal, provincie, gemeente en wijk worden afgeleid uit de buurtkaart
	attribute<NL>           NL_rel           := const(0[NL],.);
	attribute<Provincie>    Provincie_rel    := rlookup(PROV_CODE, Provincie/Values);
	attribute<Energieregio> Energieregio_rel := rlookup(ER_NAAM, Energieregio/Values);
	attribute<Gemeente>     Gemeente_rel     := rlookup(GM_CODE, Gemeente/Values);
	attribute<Wijk>         Wijk_rel         := rlookup(WK_CODE, Wijk/Values);
	
	// jaar waar vanaf BMC in een planregio is toegestaan
	attribute<yr_uint16> BioWKK_Start  := const(2020[yr_uint16], .); 
	
	parameter<string> rjoin_per_jaar_expr_template := 
		'MakeDefined('
			+ AsList('rjoin(BU_CODE, j' + Invoer/RuimtelijkeData/CBSWijkEnBuurt/Jaar/reverse + '/src/gwb_code_10, j' + Invoer/RuimtelijkeData/CBSWijkEnBuurt/Jaar/reverse + '/src/@@@var@@@)' ,',')
		+ ')';

	// diverse kenmerken op buurtniveau, afgeleid uit de kerncijfers wijken en buurten van het CBS
	container Eigendom: Using = Invoer/RuimtelijkeData/CBSWijkEnBuurt/per_jaar
	{
		attribute<percent> p_koopw    (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'p_koopw[percent]');  // Koopwoningen
		attribute<percent> p_huurw    (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'p_huurw[percent]');  // Huurwoningen totaal
		attribute<percent> p_wcorpw   (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'p_wcorpw[percent]'); // In bezit woningcorporatie
		attribute<percent> p_ov_hw    (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'p_ov_hw[percent]');  // In bezit overige verhuurders
		attribute<percent> p_e_o_w    (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'p_e_o_w[percent]');  // Eigendom onbekend

		attribute<percent> p_checksum (..) := p_koopw + p_wcorpw + p_ov_hw + p_e_o_w;
	}

	container Inkomen : Using = Invoer/RuimtelijkeData/CBSWijkEnBuurt/per_jaar
	{
		attribute<percent> p_hh_li    (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'p_hh_li[percent]'); // lage inkomens
		attribute<percent> p_hh_hi    (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'p_hh_hi[percent]'); // hoge inkomens
		attribute<percent> p_hh_mi    (..) := 100[percent] - (p_hh_li + p_hh_hi);                                       // middeninkomens
		attribute<percent> p_checksum (..) := p_hh_li + p_hh_mi + p_hh_hi;
	}
	
	// overige kenmerken die van belang zijn voor de modelberekening
	container Overigen : Using = Invoer/RuimtelijkeData/CBSWijkEnBuurt/per_jaar 
	{
		attribute<percent> p_stadsv  (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'p_stadsv[percent]'); // aandeel huidige aansluiting stadsverwarming
		attribute<percent> p_aardgas (..) := 100[percent] - (p_stadsv);                                                 // aandeel huidige aansluiting aardgas

		attribute<ha> a_opp_ha       (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'a_opp_ha[ha]'); // totaal oppervlak buurt
		attribute<ha> a_lan_ha       (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'a_lan_ha[ha]'); // landoppervlak buurt
		attribute<ha> a_wat_ha       (..) := = replace(rjoin_per_jaar_expr_template, '@@@var@@@', 'a_wat_ha[ha]'); // wateroppervlak buurt

		//oppervlakte als aandeel
		attribute<ratio> r_land_com  (..) := MakeDefined(r_land, 0[ratio]);//null waarden liggen in zee
		attribute<ratio> r_land      (..) := 1d / a_opp_ha* a_lan_ha;
		attribute<ratio> r_water     (..) := (1d / a_opp_ha)* a_wat_ha;
		attribute<ratio> r_checksum  (..) := r_land + r_water;
	}
	
	unit<uint32> Subset_Havenstad := ='subset('+AsList('BU_CODE == '+quote(LeidraadResultaten/Exports/Settings/selected_Havenstad/Values), ' || ')+')'
	{
		attribute<rdc_meter> geometry (poly) := ../geometry[nr_OrgEntity]
		{
			parameter<uint32> PenColor   := rgb(100,100,100), DialogType = "PenColor";
			parameter<int16>  PenWidth   := 1s          , DialogType = "PenWidth";
		}
		attribute<string>    BU_CODE         := ../BU_CODE[nr_OrgEntity];
		
		parameter<rdc_mm> union (poly) := union_polygon(Geometry[rdc_mm]);
		
		unit<uint32> unioned_unit_1 : nrofrows = 1
		{
			attribute<rdc_mm> geometry_mm (poly) := union_data(., ../union);
		}
		
		unit<uint32> single2multi_1 := split_polygon(unioned_unit_1/geometry_mm)
		{
			attribute<rdc_meter> geometry_rd (poly) := geometry[rdc_meter]
			{
				parameter<uint32> BrushColor := rgb(0/0,0/0,0/0), DialogType = "BrushColor";
				parameter<uint32> PenColor   := rgb(255,0,0), DialogType = "PenColor";
				parameter<int16>  PenWidth   := 2s          , DialogType = "PenWidth";
			}
		}
			
			
	}
	unit<uint32> Subset_RESGooienVechtstreek := Subset_RESNoordHollandZuid;
	
	unit<uint32> Subset_RESNoordHollandZuid := subset(Energieregio_rel == Energieregio/V/RESNoordHollandZuid)
	{
		attribute<rdc_meter> geometry (poly) := ../geometry[nr_OrgEntity]
		{
			parameter<uint32> PenColor   := rgb(100,100,100), DialogType = "PenColor";
			parameter<int16>  PenWidth   := 1s          , DialogType = "PenWidth";
		}
		attribute<string>    BU_CODE         := ../BU_CODE[nr_OrgEntity];
	}
	unit<uint32> Subset_RESTwente := subset(Energieregio_rel == Energieregio/V/RESTwente)
	{
		attribute<rdc_meter> geometry (poly) := ../geometry[nr_OrgEntity]
		{
			parameter<uint32> PenColor   := rgb(100,100,100), DialogType = "PenColor";
			parameter<int16>  PenWidth   := 1s          , DialogType = "PenWidth";
		}
		attribute<string>    BU_CODE         := ../BU_CODE[nr_OrgEntity];
	}
	unit<uint32> Subset_Hengelo := ='subset('+AsList('GM_CODE == '+quote(LeidraadResultaten/Exports/Settings/selected_Hengelo/Values), ' || ')+')'
	{
		attribute<rdc_meter> geometry (poly) := ../geometry[nr_OrgEntity]
		{
			parameter<uint32> PenColor   := rgb(0,0,0), DialogType = "PenColor";
			parameter<int16>  PenWidth   := 1s          , DialogType = "PenWidth";
		}
		attribute<string>    BU_CODE         := ../BU_CODE[nr_OrgEntity];
		attribute<string>    BU_NAAM         := ../BU_NAAM[nr_OrgEntity];
	}
	unit<uint32> Subset_GooienVechtstreek := ='subset('+AsList('GM_CODE == '+quote(LeidraadResultaten/Exports/Settings/selected_GooienVechtstreek/Values), ' || ')+')'
	{
		attribute<rdc_meter> geometry (poly) := ../geometry[nr_OrgEntity]
		{
			parameter<uint32> PenColor   := rgb(0,0,0), DialogType = "PenColor";
			parameter<int16>  PenWidth   := 1s          , DialogType = "PenWidth";
		}
		attribute<string>    BU_CODE         := ../BU_CODE[nr_OrgEntity];
		attribute<string>    BU_NAAM         := ../BU_NAAM[nr_OrgEntity];
	}
}